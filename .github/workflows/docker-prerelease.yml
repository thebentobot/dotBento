name: Docker - Pre-release

on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check Commit Message
        id: check_commit
        run: |
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$LAST_COMMIT_MSG" == *"chore(master): release"* ]]; then
            echo "SKIP_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "SKIP_PRERELEASE=false" >> $GITHUB_ENV

      - name: Generate Tag
        if: env.SKIP_PRERELEASE == 'false'
        run: |
          LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          NEW_TAG="${LAST_TAG}-pre-${GITHUB_SHA::8}"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "RELEASE_NAME=Pre-release $NEW_TAG" >> $GITHUB_ENV

      - name: Create GitHub Pre-release
        if: env.SKIP_PRERELEASE == 'false'
        uses: ncipollo/release-action@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.NEW_TAG }}
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        if: env.SKIP_PRERELEASE == 'false'
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          # type=match,pattern=\d.\d.\d
          images: |
            ghcr.io/thebentobot/dotBento
          tags: |
            type=semver,pattern={{version}},suffix="pre-release-${{ github.sha }}"
      - name: Set up QEMU
        if: env.SKIP_PRERELEASE == 'false'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: env.SKIP_PRERELEASE == 'false'
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        if: env.SKIP_PRERELEASE == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}
      - name: NuGet Cache
        if: env.SKIP_PRERELEASE == 'false'
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build and push
        if: env.SKIP_PRERELEASE == 'false'
        uses: docker/build-push-action@v5
        with:
          file: src/Dockerfile
          platforms: linux/amd64,
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
